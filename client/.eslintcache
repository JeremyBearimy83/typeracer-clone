[{"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/index.tsx":"1","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/App.tsx":"2","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Game.tsx":"3","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Divify.tsx":"4"},{"size":312,"mtime":1609325385568,"results":"5","hashOfConfig":"6"},{"size":320,"mtime":1609327202862,"results":"7","hashOfConfig":"6"},{"size":499,"mtime":1609329327644,"results":"8","hashOfConfig":"6"},{"size":355,"mtime":1609582168105,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1w2lo5m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/index.tsx",[],["21","22"],"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/App.tsx",["23"],"import React, { ReactElement } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Game from \"./components/Game\";\n\nexport default function App(): ReactElement {\n  return (\n    <React.Fragment>\n      <Game />\n      <Switch>{/* <Route path=\"/\" component={} /> */}</Switch>\n    </React.Fragment>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Game.tsx",["24"],"import React, { ReactElement, useState } from \"react\";\n\nimport Divify from \"./Divify\";\n\nimport { letter } from \"../../types\";\n\nconst textString: string = \"This should work!\";\nconst textArr: letter[] = textString\n  .split(\"\")\n  .map((val) => ({ value: val, color: \"grey\" }));\n\nexport default function Game(): ReactElement {\n  const [text, setText] = useState<letter[]>(textArr);\n  console.log({ text });\n  return (\n    <React.Fragment>\n      <Divify textArr={textArr} />\n    </React.Fragment>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Divify.tsx",["25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":2,"column":18,"nodeType":"32","messageId":"33","endLine":2,"endColumn":23},{"ruleId":"30","severity":1,"message":"34","line":13,"column":16,"nodeType":"32","messageId":"33","endLine":13,"endColumn":23},{"ruleId":"30","severity":1,"message":"35","line":5,"column":11,"nodeType":"32","messageId":"33","endLine":5,"endColumn":17},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'setText' is assigned a value but never used.","'IProps' is defined but never used.","no-global-assign","no-unsafe-negation"]