[{"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/index.tsx":"1","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/App.tsx":"2","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/context/GameContext.tsx":"3","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/context/AuthContext.tsx":"4","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/utils/socket.ts":"5","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Auth.tsx":"6","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Play.tsx":"7","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Room.tsx":"8","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Game.tsx":"9","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Header.tsx":"10","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Home.tsx":"11","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/hooks/useInputState.ts":"12","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Divify.tsx":"13","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Track.tsx":"14","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/hooks/useTimer.ts":"15"},{"size":506,"mtime":1610523309959,"results":"16","hashOfConfig":"17"},{"size":1115,"mtime":1610523309959,"results":"18","hashOfConfig":"17"},{"size":1949,"mtime":1610701304680,"results":"19","hashOfConfig":"17"},{"size":974,"mtime":1610523309959,"results":"20","hashOfConfig":"17"},{"size":113,"mtime":1610523309959,"results":"21","hashOfConfig":"17"},{"size":5104,"mtime":1610523294759,"results":"22","hashOfConfig":"17"},{"size":1589,"mtime":1610715190641,"results":"23","hashOfConfig":"17"},{"size":1959,"mtime":1610687530310,"results":"24","hashOfConfig":"17"},{"size":5728,"mtime":1610714485124,"results":"25","hashOfConfig":"17"},{"size":1102,"mtime":1610523294759,"results":"26","hashOfConfig":"17"},{"size":564,"mtime":1610523294759,"results":"27","hashOfConfig":"17"},{"size":432,"mtime":1610523294759,"results":"28","hashOfConfig":"17"},{"size":798,"mtime":1610523309959,"results":"29","hashOfConfig":"17"},{"size":522,"mtime":1610601832420,"results":"30","hashOfConfig":"17"},{"size":404,"mtime":1610701456086,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1f92t6s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/index.tsx",[],["69","70"],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/App.tsx",[],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/context/GameContext.tsx",[],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/context/AuthContext.tsx",["71"],"import React, { ReactElement, useContext, useState } from \"react\";\nimport { User, Nullable } from \"../utils/types\";\n\ninterface Props {\n  children: ReactElement;\n}\n\ninterface Value {\n  currentUser: Nullable<User>;\n  register: (email: string, password: string) => Promise<void>;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = React.createContext<Nullable<Value>>(null);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default function AuthProvider({ children }: Props): ReactElement {\n  const [currentUser, setCurrentUser] = useState<Nullable<User>>(null);\n\n  const register = async (email: string, password: string) => {};\n\n  const login = async (email: string, password: string) => {};\n\n  const logout = async () => {};\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/utils/socket.ts",[],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Auth.tsx",["72","73","74","75","76","77"],"import React, { ReactElement, useState, FormEvent } from \"react\";\n\nimport useInputState from \"../../hooks/useInputState\";\n\ninterface Props {}\n\nconst validateEmail = (email: string) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\nexport default function Auth({}: Props): ReactElement {\n  const [login, setLogin] = useState(true);\n\n  const switchPage = () => {\n    setLogin((prev) => !prev);\n  };\n\n  return (\n    <div className=\"auth\">\n      <main>\n        {login ? (\n          <SignIn switchPage={switchPage} />\n        ) : (\n          <Register switchPage={switchPage} />\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction SignIn({ switchPage }: { switchPage: () => void }): ReactElement {\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [email, setEmail, resetEmail] = useInputState();\n  const [pass, setPass, resetPass] = useInputState();\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const errors: string[] = [];\n    if (!email) errors.push(\"Email is Required\");\n    else if (!validateEmail(email)) errors.push(\"Invalid Email ID\");\n    if (!pass) errors.push(\"Password is Required\");\n\n    if (errors.length === 0) {\n    } else {\n      resetEmail();\n      resetPass();\n      setErrors(errors);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Sign In</h1>\n      <form onSubmit={handleSubmit}>\n        {errors.map((err) => {\n          return <div className=\"error\">{err}</div>;\n        })}\n        <div className=\"input\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            value={email}\n            onChange={setEmail}\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Johndoe@gmail.com\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"pass\">Password</label>\n          <input\n            value={pass}\n            onChange={setPass}\n            id=\"pass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n\n        <div className=\"outh outh--google\">\n          <i className=\"fab fa-google\"></i>\n          Continue with Google\n        </div>\n        <div className=\"outh outh--discord\">\n          <i className=\"fab fa-discord\"></i>\n          Continue with Discord\n        </div>\n        <button>Submit</button>\n      </form>\n      <span>\n        Don't have an account? <span onClick={switchPage}>Register</span>{\" \"}\n      </span>\n    </React.Fragment>\n  );\n}\n\nfunction Register({ switchPage }: { switchPage: () => void }): ReactElement {\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [username, setUsername, resetUsername] = useInputState();\n  const [email, setEmail, resetEmail] = useInputState();\n  const [pass, setPass, resetPass] = useInputState();\n  const [confirmPass, setConfirmPass, resetConfirmPass] = useInputState();\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const errors: string[] = [];\n    if (!username) errors.push(\"Username is Required\");\n    if (!email) errors.push(\"Email is Required\");\n    else if (!validateEmail(email)) errors.push(\"Invalid Email ID\");\n    if (!pass) errors.push(\"Password is Required\");\n    else if (pass !== confirmPass) errors.push(\"Passwords do not match\");\n\n    if (errors.length === 0) {\n    } else {\n      resetEmail();\n      resetPass();\n      resetConfirmPass();\n      setErrors(errors);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        {errors.map((err) => {\n          return <div className=\"error\">{err}</div>;\n        })}\n        <div className=\"input\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            value={username}\n            onChange={setUsername}\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"JohnDoe\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            value={email}\n            onChange={setEmail}\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Johndoe@gmail.com\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"pass\">Password</label>\n          <input\n            value={pass}\n            onChange={setPass}\n            id=\"pass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"cpass\">Confirm Password</label>\n          <input\n            value={confirmPass}\n            onChange={setConfirmPass}\n            id=\"cpass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n\n        <button>Submit</button>\n      </form>\n      <span>\n        Already have an account? <span onClick={switchPage}>Sign In</span>{\" \"}\n      </span>\n    </React.Fragment>\n  );\n}\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Play.tsx",["78"],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Room.tsx",["79"],"import React, { ReactElement, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useGame } from \"../../context/GameContext\";\n\nimport { Room as RoomType, Player } from \"../../utils/types\";\n\nexport default function Room({ match }: any): ReactElement {\n  const game = useGame();\n\n  const history = useHistory();\n\n  const players = game?.room?.players;\n\n  useEffect(() => {\n    // if (!game?.room?.gameStarted) {\n    //   return game?.leaveRoom;\n    // }\n  }, []);\n\n  game?.onUpdate((room) => {\n    if (room.gameStarted) {\n      history.push({\n        pathname: `${match.url}/game`,\n        state: { textString: room.paragraph },\n      });\n    }\n  });\n\n  const handleLeave = () => {\n    game?.leaveRoom();\n    history.push(\"/play\");\n  };\n\n  const handleStart = () => {\n    game?.startGame();\n  };\n\n  return (\n    <div className=\"room\">\n      <h1>\n        Room ID: <span> {game?.room?._id}</span>{\" \"}\n        <LeaveButton handleLeave={handleLeave} />\n      </h1>\n      <h2>Players</h2>\n      {players?.map((player: Player) => (\n        <div className=\"player\">\n          {\" \"}\n          <i\n            style={{ color: `${player.color}` }}\n            className=\"fas fa-user\"\n          ></i>{\" \"}\n          {player.user.username} #{player.user.tag}\n        </div>\n      ))}\n      <button onClick={handleStart} disabled={players && players.length < 2}>\n        Start\n      </button>\n    </div>\n  );\n}\n\n// FOR OPTIMIZATION\n// IF ITS NOT IN A DIFFERENT COMPONENT\n// WHOLE PAGE IS RE RENDERING ON HOVER\nfunction LeaveButton({\n  handleLeave,\n}: {\n  handleLeave: () => void;\n}): ReactElement {\n  const [doorClass, setDoorClass] = useState(\"fas fa-door-closed\");\n\n  return (\n    <div\n      onClick={handleLeave}\n      onMouseEnter={() => setDoorClass(\"fas fa-door-open\")}\n      onMouseLeave={() => setDoorClass(\"fas fa-door-closed\")}\n      className=\"leave\"\n    >\n      Leave\n      <i className={doorClass}></i>\n    </div>\n  );\n}\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Game.tsx",["80","81","82","83","84","85","86"],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Header.tsx",["87","88"],"import React, { ReactElement } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport logo from \"../../assets/logo.png\";\n\ninterface Props {}\n\nexport default function Header(): ReactElement {\n  return (\n    <React.Fragment>\n      <div className=\"header\">\n        <div className=\"left\">\n          <img src={logo} />\n          <span>TypeRacer</span>\n        </div>\n        <div className=\"right\">\n          <div className=\"player\">\n            <i className=\"fas fa-user\"></i>\n            <span>Guest</span>\n            {/* #1337 */}\n          </div>\n          <Link to=\"/auth\">\n            <button>\n              <i className=\"fas fa-sign-in-alt\"></i>\n              Sign In\n            </button>\n          </Link>\n        </div>\n      </div>\n      <nav className=\"nav\">\n        <NavLink exact to=\"/\" activeClassName=\"link-active\">\n          <i className=\"fas fa-home\"></i>\n          Home\n        </NavLink>\n        <NavLink to=\"/play\" activeClassName=\"link-active\">\n          <i className=\"fas fa-keyboard\"></i>\n          Play\n        </NavLink>\n      </nav>\n    </React.Fragment>\n  );\n}\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/pages/Home.tsx",["89","90"],"import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport typing from \"../../assets/typing.png\";\n\ninterface Props {}\n\nexport default function Home({}: Props): ReactElement {\n  return (\n    <div className=\"home\">\n      <aside>\n        <h1>TypeRacer</h1>\n        <p>\n          Take your typing skills to the next level, one keystroke at a time\n        </p>\n        <Link to=\"/play\">\n          <button>Start Typing</button>\n        </Link>\n      </aside>\n      <aside>\n        <img src={typing} />\n      </aside>\n    </div>\n  );\n}\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/hooks/useInputState.ts",[],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Divify.tsx",["91"],"import React, { ReactElement } from \"react\";\n\nimport { Letter } from \"../../utils/types\";\n\ninterface IProps {\n  textArr: Letter[];\n}\n\nconst Divify: React.FC<IProps> = ({ textArr }: IProps) => {\n  return (\n    <React.Fragment>\n      <div className=\"letter-container\">\n        {textArr.map((letter: Letter) => {\n          return (\n            <span\n              className=\"letter\"\n              style={{\n                backgroundColor:\n                  letter.color === \"green\"\n                    ? \"#7bc74d\"\n                    : letter.color === \"red\"\n                    ? \"#f33535\"\n                    : \"#1D1C20\",\n              }}\n            >\n              {letter.value}{\" \"}\n            </span>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Divify;\n","/home/akhilkala/Desktop/Web/typeracer-clone/client/src/components/utils/Track.tsx",[],"/home/akhilkala/Desktop/Web/typeracer-clone/client/src/hooks/useTimer.ts",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":22,"column":23,"nodeType":"98","messageId":"99","endLine":22,"endColumn":37},{"ruleId":"100","severity":1,"message":"101","line":8,"column":36,"nodeType":"102","messageId":"103","endLine":8,"endColumn":37,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":61,"nodeType":"102","messageId":"103","endLine":8,"endColumn":62,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":70,"nodeType":"102","messageId":"103","endLine":8,"endColumn":71,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":74,"nodeType":"102","messageId":"103","endLine":8,"endColumn":75,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":12,"column":30,"nodeType":"110","messageId":"111","endLine":12,"endColumn":39},{"ruleId":"96","severity":1,"message":"112","line":101,"column":33,"nodeType":"98","messageId":"99","endLine":101,"endColumn":46},{"ruleId":"96","severity":1,"message":"113","line":1,"column":49,"nodeType":"98","messageId":"99","endLine":1,"endColumn":58},{"ruleId":"96","severity":1,"message":"114","line":5,"column":18,"nodeType":"98","messageId":"99","endLine":5,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":82,"column":6,"nodeType":"117","endLine":82,"endColumn":19,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":86,"column":19,"nodeType":"121","messageId":"111","endLine":86,"endColumn":21},{"ruleId":"96","severity":1,"message":"122","line":96,"column":17,"nodeType":"98","messageId":"99","endLine":96,"endColumn":20},{"ruleId":"115","severity":1,"message":"123","line":156,"column":6,"nodeType":"117","endLine":156,"endColumn":15,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"120","line":163,"column":40,"nodeType":"121","messageId":"111","endLine":163,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":165,"column":37,"nodeType":"121","messageId":"111","endLine":165,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":169,"column":37,"nodeType":"121","messageId":"111","endLine":169,"endColumn":39},{"ruleId":"96","severity":1,"message":"125","line":6,"column":11,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":13,"column":11,"nodeType":"128","endLine":13,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":8,"column":30,"nodeType":"110","messageId":"111","endLine":8,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":21,"column":9,"nodeType":"128","endLine":21,"endColumn":29},{"ruleId":"96","severity":1,"message":"129","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":29},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"@typescript-eslint/no-unused-vars","'setCurrentUser' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["132","133"],["134","135"],["136","137"],["138","139"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'resetUsername' is assigned a value but never used.","'useEffect' is defined but never used.","'RoomType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'wordCount', 'wordStartIndex', and 'wordsArr'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setText' needs the current value of 'wordStartIndex'.","ArrayExpression",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'WPM' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array. If 'start' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["141"],"'Props' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"142","fix":"143","desc":"144"},{"messageId":"145","fix":"146","desc":"147"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"145","fix":"149","desc":"147"},{"messageId":"142","fix":"150","desc":"144"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"145","fix":"153","desc":"147"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"removeEscape",{"range":"158","text":"159"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"160","text":"161"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"162","text":"159"},{"range":"163","text":"161"},{"range":"164","text":"159"},{"range":"165","text":"161"},{"range":"166","text":"159"},{"range":"167","text":"161"},"Update the dependencies array to be: [currentWord, wordCount, wordStartIndex, wordsArr]",{"range":"168","text":"169"},"Update the dependencies array to be: [current, start]",{"range":"170","text":"171"},[221,222],"",[221,221],"\\",[246,247],[246,246],[255,256],[255,255],[259,260],[259,259],[2637,2650],"[currentWord, wordCount, wordStartIndex, wordsArr]",[4567,4576],"[current, start]"]