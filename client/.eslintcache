[{"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/index.tsx":"1","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/App.tsx":"2","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/context/GameContext.tsx":"3","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/context/AuthContext.tsx":"4","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/utils/socket.ts":"5","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Auth.tsx":"6","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Play.tsx":"7","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Home.tsx":"8","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Game.tsx":"9","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Room.tsx":"10","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Header.tsx":"11","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/hooks/useInputState.ts":"12","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Divify.tsx":"13","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Track.tsx":"14","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/hooks/useTimer.ts":"15","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Snackbar.tsx":"16","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/AuthenticateRoute.tsx":"17"},{"size":922,"mtime":1611314985732,"results":"18","hashOfConfig":"19"},{"size":1200,"mtime":1611325489277,"results":"20","hashOfConfig":"19"},{"size":3377,"mtime":1611309796124,"results":"21","hashOfConfig":"19"},{"size":1027,"mtime":1611323784305,"results":"22","hashOfConfig":"19"},{"size":113,"mtime":1610523408535,"results":"23","hashOfConfig":"19"},{"size":8550,"mtime":1611324311211,"results":"24","hashOfConfig":"19"},{"size":1589,"mtime":1611154366338,"results":"25","hashOfConfig":"19"},{"size":564,"mtime":1610523221843,"results":"26","hashOfConfig":"19"},{"size":5728,"mtime":1611153704895,"results":"27","hashOfConfig":"19"},{"size":1959,"mtime":1611308174963,"results":"28","hashOfConfig":"19"},{"size":1322,"mtime":1611307700126,"results":"29","hashOfConfig":"19"},{"size":432,"mtime":1610523221843,"results":"30","hashOfConfig":"19"},{"size":798,"mtime":1610523408531,"results":"31","hashOfConfig":"19"},{"size":522,"mtime":1611153704895,"results":"32","hashOfConfig":"19"},{"size":404,"mtime":1611153704895,"results":"33","hashOfConfig":"19"},{"size":869,"mtime":1611323666224,"results":"34","hashOfConfig":"19"},{"size":868,"mtime":1611325621718,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1j9p1b",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/index.tsx",[],["78","79"],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/App.tsx",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/context/GameContext.tsx",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/context/AuthContext.tsx",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/utils/socket.ts",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Auth.tsx",["80","81","82","83","84","85","86","87","88","89","90"],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Play.tsx",["91"],"import React, { ReactElement, useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useGame } from \"../../context/GameContext\";\n\nimport { DualRing } from \"react-spinners-css\";\n\nexport default function Play({ match }: any): ReactElement {\n  const history = useHistory();\n\n  const game = useGame();\n\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  game?.onUpdate((room, event) => {\n    if (event === \"room-created\" || event === \"room-joined\") {\n      setLoading(false);\n      history.push(`/room/${room._id}`);\n    }\n  });\n\n  const handleCreate = () => {\n    game?.createRoom();\n    setLoading(true);\n  };\n\n  const handleJoin = () => {\n    const roomID = inputRef.current?.value;\n\n    if (!roomID) return;\n\n    //VERIFY IF ROOM EXISTS\n\n    const exists = true;\n\n    if (!exists) {\n      setError(true);\n      return;\n    }\n\n    game?.joinRoom(roomID);\n  };\n\n  return (\n    <div className=\"play\">\n      <section>\n        {loading ? (\n          <div className=\"loading\">\n            <DualRing size={140} />\n          </div>\n        ) : (\n          <>\n            <h1>Create a Room</h1>\n            <button onClick={handleCreate}>Create</button>\n          </>\n        )}\n      </section>\n      <section>\n        <h1>Join a Room</h1>\n        {error && <span className=\"error\">Invalid ID</span>}\n        <input ref={inputRef} type=\"text\" placeholder=\"Room ID\" />\n        <button onClick={handleJoin}>Join</button>\n      </section>\n    </div>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Home.tsx",["92","93"],"import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport typing from \"../../assets/typing.png\";\n\ninterface Props {}\n\nexport default function Home({}: Props): ReactElement {\n  return (\n    <div className=\"home\">\n      <aside>\n        <h1>TypeRacer</h1>\n        <p>\n          Take your typing skills to the next level, one keystroke at a time\n        </p>\n        <Link to=\"/play\">\n          <button>Start Typing</button>\n        </Link>\n      </aside>\n      <aside>\n        <img src={typing} />\n      </aside>\n    </div>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Game.tsx",["94","95","96","97","98","99","100"],"import React, { ReactElement, useState, useEffect, useRef } from \"react\";\n\nimport Divify from \"../utils/Divify\";\nimport Track from \"../utils/Track\";\n\nimport { Letter } from \"../../utils/types\";\nimport { useLocation } from \"react-router-dom\";\nimport { useGame } from \"../../context/GameContext\";\n\n// const textString: string =\n//   \"Synthetic emotions in the form of pills, psychological warfare in the form of advertising, mind-altering chemicals in the form of food, brainwashing seminars in the form of media, controlled isolated bubbles in the form of social networks.\";\n\n// const textString: string = \"Please work :)\";\n\nexport default function Game(): ReactElement {\n  //FOR COUNDOWN\n  const [started, setStarted] = useState(false);\n\n  // GETS PARAGRAPH FROM ROOM\n  const {\n    state: { textString },\n  }: any = useLocation();\n\n  const game = useGame();\n\n  // const textString = game?.room?.paragraph;\n\n  //STORES AN ARRAY OF WORDS\n  const wordsArr: string[] = textString.split(\" \");\n\n  //STORES ARRAY OF LETTER OBJECTS\n  const textArr: Letter[] = textString\n    .split(\"\")\n    .map((val: string) => ({ value: val, color: \"grey\" }));\n\n  const [text, setText] = useState<Letter[]>(textArr);\n  //THE INDEX I AM  CURRENTLY ON IN THE LETTER ARRAY\n  //const [letterCount, setLetterCount] = useState<number>(1);\n\n  //THE INDEX I AM CURRENTLY ON IN THE WORD ARRAY\n  const [wordCount, setWordCount] = useState<number>(0);\n\n  const [wordStartIndex, setWordStartIndex] = useState<number>(0);\n\n  //CURRENT WORD BEING TYPED IN THE INPUT\n  const [currentWord, setCurrentWord] = useState(\"\");\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"HANDLE IN PUT CHANGE IN CALLED\");\n    setCurrentWord(event.target.value);\n  };\n\n  useEffect(() => {\n    setText((prevText) => {\n      console.log({ prevText });\n      // const n: number = wordStartIndex + wordsArr[wordCount].length;\n      // console.log({ n });\n      const newText = prevText.map((l: Letter, i: number) => {\n        if (i >= wordStartIndex && i < wordStartIndex + currentWord.length) {\n          const subString: string = wordsArr[wordCount].substr(\n            0,\n            i - wordStartIndex + 1\n          );\n          return {\n            ...l,\n            color:\n              subString === currentWord.substr(0, i - wordStartIndex + 1)\n                ? \"green\"\n                : \"red\",\n          };\n        } else if (i >= wordStartIndex) return { ...l, color: \"grey\" };\n        return l;\n      });\n      return newText;\n    });\n  }, [currentWord]);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    console.log(event.key);\n    if (event.key == \" \") {\n      if (currentWord === wordsArr[wordCount]) {\n        setCurrentWord(\"\");\n        setWordCount(wordCount + 1);\n        setWordStartIndex((prev) => prev + currentWord.length + 1);\n        event.preventDefault();\n      } else return;\n    }\n  };\n\n  useEffect(() => {\n    if (wordStartIndex > 0) {\n      setText((prevText) => {\n        const newText = Object.assign([], prevText, {\n          [wordStartIndex - 1]: {\n            ...prevText[wordStartIndex - 1],\n            color: \"green\",\n          },\n        });\n        return newText;\n      });\n    }\n  }, [wordStartIndex]);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [started]);\n\n  //console.log({ text });\n  return started ? (\n    <div className=\"game\">\n      <Track />\n      <Track />\n      <Track />\n      <Track />\n      <Divify textArr={text} />\n      <div className=\"input-container\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={currentWord}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n        />\n      </div>\n    </div>\n  ) : (\n    <Countdown start={() => setStarted(true)} />\n  );\n}\n\nfunction Countdown({ start }: { start: () => void }): ReactElement {\n  const [current, setCurrent] = useState(0);\n\n  useEffect(() => {\n    if (current === 3) start();\n    setTimeout(() => {\n      setCurrent((prev) => prev + 1);\n    }, 800);\n  }, [current]);\n\n  const hints = [\"Get Ready\", \"Hands on board\", \"Go!\"];\n\n  return (\n    <div className=\"countdown\">\n      <section>\n        <div style={{ opacity: current == 0 ? 1 : 0.4 }} className=\"red\"></div>\n        <div\n          style={{ opacity: current == 1 ? 1 : 0.4 }}\n          className=\"orange\"\n        ></div>\n        <div\n          style={{ opacity: current == 2 ? 1 : 0.4 }}\n          className=\"green\"\n        ></div>\n      </section>\n      <section>{hints[current]}</section>\n    </div>\n  );\n}\n\n//ACHA SO WHAT'S THE NEW PLAN\n//THE NEW PLAN IS WHEN THE CURRENT WORD CHANGES\n//I SHOULD SET ALL THE CURRENT CHARACTERS TO GREEN OR RED\n\n//FEW ISSUES TO BE RESOLVED RIGHT NOW:\n//TODO:\n//HANDLE ERRORS DUE TO PRESSING CHARACTERS LIKE SHIFT ALT CTRL ETC\n\n//EVERY TIME I HIT SPACE AND THE WORD TYPED IS CORRECT THE INPUT FIELD\n//SHOULD CLEAR\n\n//IF THE USER TYPES A WRONG CHARACTER CHARACTER TYPED FOLLOWING IT\n// SHOULD BE RED NOT MATTER WHAT IS TYPED\n//TEXTFIELD SHOULD ALSO BE RED\n\n//DRY RUN EVERYTHING AND INTEGRATE IT WITH AKHIL'S CODE PROPERLY\n\n// ANYTHING ELSE?\n//THAT'S IT FOR NOW I GUESS\n// BRUH THE WORDS ARE WRAPPING. DO WE WANT THIS BEHAVIOUR?\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/pages/Room.tsx",["101"],"import React, { ReactElement, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useGame } from \"../../context/GameContext\";\n\nimport { Room as RoomType, Player } from \"../../utils/types\";\n\nexport default function Room({ match }: any): ReactElement {\n  const game = useGame();\n\n  const history = useHistory();\n\n  const players = game?.room?.players;\n\n  useEffect(() => {\n    // if (!game?.room?.gameStarted) {\n    //   return game?.leaveRoom;\n    // }\n  }, []);\n\n  game?.onUpdate((room) => {\n    if (room.gameStarted) {\n      history.push({\n        pathname: `${match.url}/game`,\n        state: { textString: room.paragraph },\n      });\n    }\n  });\n\n  const handleLeave = () => {\n    game?.leaveRoom();\n    history.push(\"/play\");\n  };\n\n  const handleStart = () => {\n    game?.startGame();\n  };\n\n  return (\n    <div className=\"room\">\n      <h1>\n        Room ID: <span> {game?.room?._id}</span>{\" \"}\n        <LeaveButton handleLeave={handleLeave} />\n      </h1>\n      <h2>Players</h2>\n      {players?.map((player: Player) => (\n        <div className=\"player\">\n          {\" \"}\n          <i\n            style={{ color: `${player.color}` }}\n            className=\"fas fa-user\"\n          ></i>{\" \"}\n          {player.user.username} #{player.user.tag}\n        </div>\n      ))}\n      <button onClick={handleStart} disabled={players && players.length < 2}>\n        Start\n      </button>\n    </div>\n  );\n}\n\n// FOR OPTIMIZATION\n// IF ITS NOT IN A DIFFERENT COMPONENT\n// WHOLE PAGE IS RE RENDERING ON HOVER\nfunction LeaveButton({\n  handleLeave,\n}: {\n  handleLeave: () => void;\n}): ReactElement {\n  const [doorClass, setDoorClass] = useState(\"fas fa-door-closed\");\n\n  return (\n    <div\n      onClick={handleLeave}\n      onMouseEnter={() => setDoorClass(\"fas fa-door-open\")}\n      onMouseLeave={() => setDoorClass(\"fas fa-door-closed\")}\n      className=\"leave\"\n    >\n      Leave\n      <i className={doorClass}></i>\n    </div>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Header.tsx",["102","103","104","105"],"import React, { ReactElement } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport logo from \"../../assets/logo.png\";\n\nimport { useAuth } from \"../../context/AuthContext\";\nimport { IUser, Nullable } from \"../../utils/types\";\n\ninterface Props {}\n\nexport default function Header(): ReactElement {\n  //USER IS THE USER FROM THE AUTHCONTEXT\n  const User = useAuth()?.currentUser;\n  return (\n    <React.Fragment>\n      <div className=\"header\">\n        <div className=\"left\">\n          <img src={logo} />\n          <span>TypeRacer</span>\n        </div>\n        <div className=\"right\">\n          <div className=\"player\">\n            <i className=\"fas fa-user\"></i>\n            <span>{User ? `${User.username}` : `Guest`}</span>\n            {/* #1337 */}\n          </div>\n          <Link to=\"/auth\">\n            <button>\n              <i className=\"fas fa-sign-in-alt\"></i>\n              Sign In\n            </button>\n          </Link>\n        </div>\n      </div>\n      <nav className=\"nav\">\n        <NavLink exact to=\"/\" activeClassName=\"link-active\">\n          <i className=\"fas fa-home\"></i>\n          Home\n        </NavLink>\n        <NavLink to=\"/play\" activeClassName=\"link-active\">\n          <i className=\"fas fa-keyboard\"></i>\n          Play\n        </NavLink>\n      </nav>\n    </React.Fragment>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/hooks/useInputState.ts",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Divify.tsx",["106"],"import React, { ReactElement } from \"react\";\n\nimport { Letter } from \"../../utils/types\";\n\ninterface IProps {\n  textArr: Letter[];\n}\n\nconst Divify: React.FC<IProps> = ({ textArr }: IProps) => {\n  return (\n    <React.Fragment>\n      <div className=\"letter-container\">\n        {textArr.map((letter: Letter) => {\n          return (\n            <span\n              className=\"letter\"\n              style={{\n                backgroundColor:\n                  letter.color === \"green\"\n                    ? \"#7bc74d\"\n                    : letter.color === \"red\"\n                    ? \"#f33535\"\n                    : \"#1D1C20\",\n              }}\n            >\n              {letter.value}{\" \"}\n            </span>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Divify;\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Track.tsx",["107","108"],"import React, { ReactElement } from \"react\";\n\ninterface Props {\n  color: string;\n  currentPercentage: number;\n}\n\nexport default function Track({}): ReactElement {\n  return (\n    <div className=\"track\">\n      <div style={{ color: \"#00fff5\", left: \"10%\" }} className=\"car\">\n        <i className=\"fas fa-car-side\"></i>\n      </div>\n      <div\n        style={{ background: \"#00fff5\", width: \"10%\" }}\n        className=\"completed-line\"\n      ></div>\n    </div>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/hooks/useTimer.ts",[],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/Snackbar.tsx",["109","110","111"],"/home/ujjwal/the_good_place/web_stuff/trash/typeracer-clone/client/src/components/utils/AuthenticateRoute.tsx",["112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":52,"nodeType":"119","messageId":"120","endLine":1,"endColumn":61},{"ruleId":"117","severity":1,"message":"121","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},{"ruleId":"117","severity":1,"message":"122","line":9,"column":15,"nodeType":"119","messageId":"120","endLine":9,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":21,"column":36,"nodeType":"125","messageId":"126","endLine":21,"endColumn":37,"suggestions":"127"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":61,"nodeType":"125","messageId":"126","endLine":21,"endColumn":62,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":70,"nodeType":"125","messageId":"126","endLine":21,"endColumn":71,"suggestions":"129"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":74,"nodeType":"125","messageId":"126","endLine":21,"endColumn":75,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":25,"column":30,"nodeType":"133","messageId":"134","endLine":25,"endColumn":39},{"ruleId":"117","severity":1,"message":"135","line":76,"column":10,"nodeType":"119","messageId":"120","endLine":76,"endColumn":19},{"ruleId":"117","severity":1,"message":"136","line":137,"column":9,"nodeType":"119","messageId":"120","endLine":137,"endColumn":15},{"ruleId":"117","severity":1,"message":"137","line":213,"column":33,"nodeType":"119","messageId":"120","endLine":213,"endColumn":46},{"ruleId":"117","severity":1,"message":"118","line":1,"column":49,"nodeType":"119","messageId":"120","endLine":1,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":8,"column":30,"nodeType":"133","messageId":"134","endLine":8,"endColumn":39},{"ruleId":"138","severity":1,"message":"139","line":21,"column":9,"nodeType":"140","endLine":21,"endColumn":29},{"ruleId":"117","severity":1,"message":"141","line":24,"column":9,"nodeType":"119","messageId":"120","endLine":24,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":78,"column":6,"nodeType":"144","endLine":78,"endColumn":19,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":82,"column":19,"nodeType":"148","messageId":"134","endLine":82,"endColumn":21},{"ruleId":"142","severity":1,"message":"149","line":141,"column":6,"nodeType":"144","endLine":141,"endColumn":15,"suggestions":"150"},{"ruleId":"146","severity":1,"message":"147","line":148,"column":40,"nodeType":"148","messageId":"134","endLine":148,"endColumn":42},{"ruleId":"146","severity":1,"message":"147","line":150,"column":37,"nodeType":"148","messageId":"134","endLine":150,"endColumn":39},{"ruleId":"146","severity":1,"message":"147","line":154,"column":37,"nodeType":"148","messageId":"134","endLine":154,"endColumn":39},{"ruleId":"117","severity":1,"message":"151","line":5,"column":18,"nodeType":"119","messageId":"120","endLine":5,"endColumn":26},{"ruleId":"117","severity":1,"message":"152","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":15},{"ruleId":"117","severity":1,"message":"153","line":7,"column":17,"nodeType":"119","messageId":"120","endLine":7,"endColumn":25},{"ruleId":"117","severity":1,"message":"154","line":9,"column":11,"nodeType":"119","messageId":"120","endLine":9,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":18,"column":11,"nodeType":"140","endLine":18,"endColumn":29},{"ruleId":"117","severity":1,"message":"155","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":29},{"ruleId":"117","severity":1,"message":"154","line":3,"column":11,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":8,"column":31,"nodeType":"133","messageId":"134","endLine":8,"endColumn":33},{"ruleId":"117","severity":1,"message":"156","line":1,"column":32,"nodeType":"119","messageId":"120","endLine":1,"endColumn":40},{"ruleId":"117","severity":1,"message":"157","line":3,"column":11,"nodeType":"119","messageId":"120","endLine":3,"endColumn":17},{"ruleId":"117","severity":1,"message":"158","line":13,"column":9,"nodeType":"119","messageId":"120","endLine":13,"endColumn":21},{"ruleId":"117","severity":1,"message":"159","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'gql' is defined but never used.","'useQuery' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["162","163"],["164","165"],["166","167"],["168","169"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'authToken' is assigned a value but never used.","'query2' is assigned a value but never used.","'resetUsername' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'game' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'wordCount', 'wordStartIndex', and 'wordsArr'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setText' needs the current value of 'wordStartIndex'.","ArrayExpression",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array. If 'start' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["171"],"'RoomType' is defined but never used.","'IUser' is defined but never used.","'Nullable' is defined but never used.","'Props' is defined but never used.","'ReactElement' is defined but never used.","'useState' is defined but never used.","'Iprops' is defined but never used.","'time' is assigned a value but never used.","'Play' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"172","fix":"173","desc":"174"},{"messageId":"175","fix":"176","desc":"177"},{"messageId":"172","fix":"178","desc":"174"},{"messageId":"175","fix":"179","desc":"177"},{"messageId":"172","fix":"180","desc":"174"},{"messageId":"175","fix":"181","desc":"177"},{"messageId":"172","fix":"182","desc":"174"},{"messageId":"175","fix":"183","desc":"177"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"removeEscape",{"range":"188","text":"189"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"190","text":"191"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"192","text":"189"},{"range":"193","text":"191"},{"range":"194","text":"189"},{"range":"195","text":"191"},{"range":"196","text":"189"},{"range":"197","text":"191"},"Update the dependencies array to be: [currentWord, wordCount, wordStartIndex, wordsArr]",{"range":"198","text":"199"},"Update the dependencies array to be: [current, start]",{"range":"200","text":"201"},[494,495],"",[494,494],"\\",[519,520],[519,519],[528,529],[528,528],[532,533],[532,532],[2590,2603],"[currentWord, wordCount, wordStartIndex, wordsArr]",[4110,4119],"[current, start]"]