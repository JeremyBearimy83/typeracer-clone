[{"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/index.tsx":"1","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/App.tsx":"2","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/context/AuthContext.tsx":"3","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Game.tsx":"4","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Auth.tsx":"5","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Home.tsx":"6","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Play.tsx":"7","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/utils/Header.tsx":"8","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Divify.tsx":"9","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/hooks/useInputState.ts":"10"},{"size":407,"mtime":1609848509678,"results":"11","hashOfConfig":"12"},{"size":695,"mtime":1609848665147,"results":"13","hashOfConfig":"12"},{"size":738,"mtime":1609848607776,"results":"14","hashOfConfig":"12"},{"size":2942,"mtime":1610015601281,"results":"15","hashOfConfig":"12"},{"size":4704,"mtime":1609848574534,"results":"16","hashOfConfig":"12"},{"size":564,"mtime":1609848576174,"results":"17","hashOfConfig":"12"},{"size":389,"mtime":1609848577800,"results":"18","hashOfConfig":"12"},{"size":1098,"mtime":1609848509678,"results":"19","hashOfConfig":"12"},{"size":866,"mtime":1610015601281,"results":"20","hashOfConfig":"12"},{"size":432,"mtime":1609848509678,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1w2lo5m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/index.tsx",[],["48","49"],"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/App.tsx",[],"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/context/AuthContext.tsx",["50"],"import React, { ReactElement, useContext, useState } from \"react\";\n\ninterface Props {\n  children: ReactElement[] | ReactElement;\n}\n\ntype User = any | null;\n\nconst AuthContext = React.createContext<User>(null);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default function AuthProvider({ children }: Props): ReactElement {\n  const [currentUser, setCurrentUser] = useState<User>(null);\n\n  const register = async (email: string, password: string) => {};\n\n  const login = async (email: string, password: string) => {};\n\n  const logout = async () => {};\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Game.tsx",["51","52","53","54","55"],"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Auth.tsx",["56","57","58","59","60"],"import React, { ReactElement, useState, FormEvent } from \"react\";\n\nimport useInputState from \"../../hooks/useInputState\";\n\ninterface Props {}\n\nconst validateEmail = (email: string) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\nexport default function Auth({}: Props): ReactElement {\n  const [login, setLogin] = useState(true);\n\n  const switchPage = () => {\n    setLogin((prev) => !prev);\n  };\n\n  return (\n    <div className=\"auth\">\n      <main>\n        {login ? (\n          <SignIn switchPage={switchPage} />\n        ) : (\n          <Register switchPage={switchPage} />\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction SignIn({ switchPage }: { switchPage: () => void }): ReactElement {\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [email, setEmail, resetEmail] = useInputState();\n  const [pass, setPass, resetPass] = useInputState();\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const errors: string[] = [];\n    if (!email) errors.push(\"Email is Required\");\n    else if (!validateEmail(email)) errors.push(\"Invalid Email ID\");\n    if (!pass) errors.push(\"Password is Required\");\n\n    if (errors.length === 0) {\n    } else {\n      resetEmail();\n      resetPass();\n      setErrors(errors);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Sign In</h1>\n      <form onSubmit={handleSubmit}>\n        {errors.map((err) => {\n          return <div className=\"error\">{err}</div>;\n        })}\n        <div className=\"input\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            value={email}\n            onChange={setEmail}\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Johndoe@gmail.com\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"pass\">Password</label>\n          <input\n            value={pass}\n            onChange={setPass}\n            id=\"pass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n\n        <div className=\"outh outh--google\">\n          <i className=\"fab fa-google\"></i>\n          Continue with Google\n        </div>\n        <div className=\"outh outh--discord\">\n          <i className=\"fab fa-discord\"></i>\n          Continue with Discord\n        </div>\n        <button>Submit</button>\n      </form>\n      <span>\n        Don't have an account? <span onClick={switchPage}>Register</span>{\" \"}\n      </span>\n    </React.Fragment>\n  );\n}\n\nfunction Register({ switchPage }: { switchPage: () => void }): ReactElement {\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const [email, setEmail, resetEmail] = useInputState();\n  const [pass, setPass, resetPass] = useInputState();\n  const [confirmPass, setConfirmPass, resetConfirmPass] = useInputState();\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const errors: string[] = [];\n    if (!email) errors.push(\"Email is Required\");\n    else if (!validateEmail(email)) errors.push(\"Invalid Email ID\");\n    if (!pass) errors.push(\"Password is Required\");\n    else if (pass !== confirmPass) errors.push(\"Passwords do not match\");\n\n    if (errors.length === 0) {\n    } else {\n      resetEmail();\n      resetPass();\n      resetConfirmPass();\n      setErrors(errors);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        {errors.map((err) => {\n          return <div className=\"error\">{err}</div>;\n        })}\n        <div className=\"input\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            value={email}\n            onChange={setEmail}\n            id=\"email\"\n            type=\"text\"\n            placeholder=\"Johndoe@gmail.com\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"pass\">Password</label>\n          <input\n            value={pass}\n            onChange={setPass}\n            id=\"pass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n        <div className=\"input\">\n          <label htmlFor=\"cpass\">Confirm Password</label>\n          <input\n            value={confirmPass}\n            onChange={setConfirmPass}\n            id=\"cpass\"\n            type=\"password\"\n            placeholder=\"••••••••••\"\n          />\n        </div>\n\n        <button>Submit</button>\n      </form>\n      <span>\n        Already have an account? <span onClick={switchPage}>Sign In</span>{\" \"}\n      </span>\n    </React.Fragment>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Home.tsx",["61","62"],"import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport typing from \"../../assets/typing.png\";\n\ninterface Props {}\n\nexport default function Home({}: Props): ReactElement {\n  return (\n    <div className=\"home\">\n      <aside>\n        <h1>TypeRacer</h1>\n        <p>\n          Take your typing skills to the next level, one keystroke at a time\n        </p>\n        <Link to=\"/play\">\n          <button>Start Typing</button>\n        </Link>\n      </aside>\n      <aside>\n        <img src={typing} />\n      </aside>\n    </div>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/pages/Play.tsx",[],"/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/utils/Header.tsx",["63","64"],"import React, { ReactElement } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport logo from \"../../assets/logo.png\";\n\ninterface Props {}\n\nexport default function Header(): ReactElement {\n  return (\n    <React.Fragment>\n      <div className=\"header\">\n        <div className=\"left\">\n          <img src={logo} />\n          <span>TypeRacer</span>\n        </div>\n        <div className=\"right\">\n          <div className=\"player\">\n            <i className=\"fas fa-user\"></i>\n            <span>AKhForty7</span>\n            #1337\n          </div>\n          <Link to=\"/auth\">\n            <button>\n              <i className=\"fas fa-sign-in-alt\"></i>\n              Sign In\n            </button>\n          </Link>\n        </div>\n      </div>\n      <nav className=\"nav\">\n        <NavLink exact to=\"/\" activeClassName=\"link-active\">\n          <i className=\"fas fa-home\"></i>\n          Home\n        </NavLink>\n        <NavLink to=\"/play\" activeClassName=\"link-active\">\n          <i className=\"fas fa-keyboard\"></i>\n          Play\n        </NavLink>\n      </nav>\n    </React.Fragment>\n  );\n}\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/components/Divify.tsx",["65"],"import React, { ReactElement } from \"react\";\n\nimport { Letter } from \"../../types\";\n\ninterface IProps {\n  textArr: Letter[];\n}\n\nconst Divify: React.FC<IProps> = ({ textArr }: IProps) => {\n  console.log(\"Divify is called\");\n  return (\n    <React.Fragment>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        {textArr.map((letter: Letter) => {\n          return (\n            <span\n              style={{\n                backgroundColor:\n                  letter.color === \"green\"\n                    ? \"green\"\n                    : letter.color === \"red\"\n                    ? \"red\"\n                    : \"grey\",\n                padding: \"10px\",\n                margin: \"2px\",\n              }}\n            >\n              {letter.value}{\" \"}\n            </span>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Divify;\n","/home/ujjwal/the_good_place/web_stuff/typeracer-clone/client/src/hooks/useInputState.ts",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":16,"column":23,"nodeType":"72","messageId":"73","endLine":16,"endColumn":37},{"ruleId":"70","severity":1,"message":"74","line":1,"column":41,"nodeType":"72","messageId":"73","endLine":1,"endColumn":50},{"ruleId":"70","severity":1,"message":"75","line":11,"column":7,"nodeType":"72","messageId":"73","endLine":11,"endColumn":25},{"ruleId":"70","severity":1,"message":"76","line":21,"column":23,"nodeType":"72","messageId":"73","endLine":21,"endColumn":37},{"ruleId":"70","severity":1,"message":"77","line":24,"column":10,"nodeType":"72","messageId":"73","endLine":24,"endColumn":19},{"ruleId":"70","severity":1,"message":"78","line":24,"column":21,"nodeType":"72","messageId":"73","endLine":24,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":8,"column":36,"nodeType":"81","messageId":"82","endLine":8,"endColumn":37,"suggestions":"83"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":61,"nodeType":"81","messageId":"82","endLine":8,"endColumn":62,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":70,"nodeType":"81","messageId":"82","endLine":8,"endColumn":71,"suggestions":"85"},{"ruleId":"79","severity":1,"message":"80","line":8,"column":74,"nodeType":"81","messageId":"82","endLine":8,"endColumn":75,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":30,"nodeType":"89","messageId":"90","endLine":12,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":8,"column":30,"nodeType":"89","messageId":"90","endLine":8,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":21,"column":9,"nodeType":"93","endLine":21,"endColumn":29},{"ruleId":"70","severity":1,"message":"94","line":6,"column":11,"nodeType":"72","messageId":"73","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":13,"column":11,"nodeType":"93","endLine":13,"endColumn":29},{"ruleId":"70","severity":1,"message":"95","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":29},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"@typescript-eslint/no-unused-vars","'setCurrentUser' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'wordsArr' is assigned a value but never used.","'setLetterCount' is assigned a value but never used.","'wordCount' is assigned a value but never used.","'setWordCount' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["98","99"],["100","101"],["102","103"],["104","105"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Props' is defined but never used.","'ReactElement' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"106","fix":"107","desc":"108"},{"messageId":"109","fix":"110","desc":"111"},{"messageId":"106","fix":"112","desc":"108"},{"messageId":"109","fix":"113","desc":"111"},{"messageId":"106","fix":"114","desc":"108"},{"messageId":"109","fix":"115","desc":"111"},{"messageId":"106","fix":"116","desc":"108"},{"messageId":"109","fix":"117","desc":"111"},"removeEscape",{"range":"118","text":"119"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"120","text":"121"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"122","text":"119"},{"range":"123","text":"121"},{"range":"124","text":"119"},{"range":"125","text":"121"},{"range":"126","text":"119"},{"range":"127","text":"121"},[221,222],"",[221,221],"\\",[246,247],[246,246],[255,256],[255,255],[259,260],[259,259]]